trigger:

- main

pool:
vmImage: 'ubuntu-latest'

variables:
pythonVersion: '3.9'
coverageThreshold: '80'

stages:
- stage: BuildAndTest
  displayName: 'Build and Test'
  jobs:

  - job: BuildAndTestJob
    displayName: 'Install, Lint, Test, and Coverage'
    steps:

    - task: UsePythonVersion@0
      inputs:
      versionSpec: '$(pythonVersion)'
      addToPath: true

    - script: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt
      displayName: 'Install Dependencies'

    - script: |
      flake8 --max-line-length=88 --exclude=**init**.py
      displayName: 'Lint Python Code'
      continueOnError: true # Continue even if linting fails, but mark the step as failed

    - script: |
      pytest --cov=src --cov-report=xml --cov-report=html
      displayName: 'Run Tests with Coverage'

    - task: PublishTestResults@2
      inputs:
      testResultsFiles: '\*_/TEST-_.xml'
      testRunTitle: 'Python Tests'
      displayName: 'Publish Test Results'

    - task: PublishCodeCoverageResults@1
      inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
        reportDirectory: '$(System.DefaultWorkingDirectory)/\*\*/htmlcov'
      displayName: 'Publish Code Coverage Results'

    - script: |
      coverage report --fail-under=$(coverageThreshold)
      displayName: 'Check Coverage Threshold'

    - task: PublishBuildArtifacts@1
      inputs:
      PathtoPublish: '$(System.DefaultWorkingDirectory)'
      ArtifactName: 'drop'
      displayName: 'Publish Artifact'
